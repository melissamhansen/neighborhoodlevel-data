#noise data: https://deohs.washington.edu/national-transportation-noise-exposure-map-download
#tract data: https://www2.census.gov/geo/tiger/GENZ2020/shp/ in /cb_2020_us_tract_500k/cb_2020_us_tract_500k.shp
library(sf)
library(dplyr)

# Load the shapefile
shapefile <- "/Users/Downloads/cb_2020_us_tract_500k/cb_2020_us_tract_500k.shp"
tracts <- st_read(shapefile)

# Ensure correct column names for longitude and latitude
coordinates_sf <- st_as_sf(coordinates, coords = c("lon", "lat"), crs = st_crs(tracts))

# Perform spatial join to find which tracts each point falls into
points_with_tract <- st_join(coordinates_sf, tracts)

# Extract SID and GEOID
geoid_data <- points_with_tract %>% 
  dplyr::select(SID, GEOID)
view(geoid_data)

# Directory containing the shapefiles
shapefile_dir <- "/conus_shp/"

# Get a list of all shapefiles in the directory
shapefiles <- list.files(path = shapefile_dir, pattern = "\\.shp$", full.names = TRUE)

# Create an empty list to store filtered data frames
filtered_data_list <- list()

# Remove scientific notation using format() function
geoid_data$GEOID <- as.numeric(geoid_data$GEOID)
view(geoid_data$GEOID)

# Iterate through each shapefile
for (shapefile in shapefiles) {
  # Read the shapefile
  testtract <- st_read(shapefile)
  
  # Convert GEOID to numeric
  testtract$GEOID <- as.numeric(testtract$GEOID)
  
  # Filter testtract based on GEOID present in adi_data
  filtered_testtract <- testtract[testtract$GEOID %in% geoid_data$GEOID, ]
  
  # Add filtered_testtract to the list
  filtered_data_list[[length(filtered_data_list) + 1]] <- filtered_testtract
}


# Combine all filtered data frames into a single data frame
combined_filtered_data <- do.call(rbind, filtered_data_list)
# Calculate population-weighted noise exposure metric
pop_weighted_exposure <- (
  (combined_filtered_data$ns4050n * 47.5) + 
  (combined_filtered_data$ns5060n * 55) + 
  (combined_filtered_data$ns6070n * 62.5) + 
  (combined_filtered_data$ns7080n * 72.5) + 
  (combined_filtered_data$ns8090n * 82.5) + 
  (combined_filtered_data$nois90n * 90)
) / (
  combined_filtered_data$ns4050n + 
  combined_filtered_data$ns5060n + 
  combined_filtered_data$ns6070n + 
  combined_filtered_data$ns7080n + 
  combined_filtered_data$ns8090n + 
  combined_filtered_data$nois90n
)

# Add the calculated population-weighted noise exposure metric to combined_filtered_data
combined_filtered_data$pop_weighted_exposure <- pop_weighted_exposure

# Project 'geoid_data' to match the CRS of 'combined_filtered_data'
geoid_data <- st_transform(geoid_data, st_crs(combined_filtered_data))
merged_data <- st_join(combined_filtered_data, geoid_data, by = "GEOID")

# Create a new data frame with SID, GEOID, and pop_weighted_exposure
extracted_data <- merged_data %>%
  dplyr::select(SID, pop_weighted_exposure)

write_csv(extracted_data, 'noise.csv')
